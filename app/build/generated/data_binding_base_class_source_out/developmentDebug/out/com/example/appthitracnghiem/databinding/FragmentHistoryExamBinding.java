// Generated by view binder compiler. Do not edit!
package com.example.appthitracnghiem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appthitracnghiem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHistoryExamBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView answerHistory1;

  @NonNull
  public final TextView answerHistory2;

  @NonNull
  public final TextView answerHistory3;

  @NonNull
  public final TextView answerHistory4;

  @NonNull
  public final ImageView backHistoryExam;

  @NonNull
  public final LinearLayout layoutExercise;

  private FragmentHistoryExamBinding(@NonNull NestedScrollView rootView,
      @NonNull TextView answerHistory1, @NonNull TextView answerHistory2,
      @NonNull TextView answerHistory3, @NonNull TextView answerHistory4,
      @NonNull ImageView backHistoryExam, @NonNull LinearLayout layoutExercise) {
    this.rootView = rootView;
    this.answerHistory1 = answerHistory1;
    this.answerHistory2 = answerHistory2;
    this.answerHistory3 = answerHistory3;
    this.answerHistory4 = answerHistory4;
    this.backHistoryExam = backHistoryExam;
    this.layoutExercise = layoutExercise;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHistoryExamBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHistoryExamBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_history_exam, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHistoryExamBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.answerHistory1;
      TextView answerHistory1 = ViewBindings.findChildViewById(rootView, id);
      if (answerHistory1 == null) {
        break missingId;
      }

      id = R.id.answerHistory2;
      TextView answerHistory2 = ViewBindings.findChildViewById(rootView, id);
      if (answerHistory2 == null) {
        break missingId;
      }

      id = R.id.answerHistory3;
      TextView answerHistory3 = ViewBindings.findChildViewById(rootView, id);
      if (answerHistory3 == null) {
        break missingId;
      }

      id = R.id.answerHistory4;
      TextView answerHistory4 = ViewBindings.findChildViewById(rootView, id);
      if (answerHistory4 == null) {
        break missingId;
      }

      id = R.id.backHistoryExam;
      ImageView backHistoryExam = ViewBindings.findChildViewById(rootView, id);
      if (backHistoryExam == null) {
        break missingId;
      }

      id = R.id.layoutExercise;
      LinearLayout layoutExercise = ViewBindings.findChildViewById(rootView, id);
      if (layoutExercise == null) {
        break missingId;
      }

      return new FragmentHistoryExamBinding((NestedScrollView) rootView, answerHistory1,
          answerHistory2, answerHistory3, answerHistory4, backHistoryExam, layoutExercise);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
