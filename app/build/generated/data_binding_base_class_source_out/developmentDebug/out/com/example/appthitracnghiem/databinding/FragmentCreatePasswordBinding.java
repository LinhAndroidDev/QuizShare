// Generated by view binder compiler. Do not edit!
package com.example.appthitracnghiem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appthitracnghiem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCreatePasswordBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton hidePasswordCreate;

  @NonNull
  public final ImageButton hidePasswordRepeat;

  @NonNull
  public final EditText newPasswordCreate;

  @NonNull
  public final EditText newPasswordRepeat;

  @NonNull
  public final Button resetPassword;

  private FragmentCreatePasswordBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton hidePasswordCreate, @NonNull ImageButton hidePasswordRepeat,
      @NonNull EditText newPasswordCreate, @NonNull EditText newPasswordRepeat,
      @NonNull Button resetPassword) {
    this.rootView = rootView;
    this.hidePasswordCreate = hidePasswordCreate;
    this.hidePasswordRepeat = hidePasswordRepeat;
    this.newPasswordCreate = newPasswordCreate;
    this.newPasswordRepeat = newPasswordRepeat;
    this.resetPassword = resetPassword;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCreatePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCreatePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment__create_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCreatePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.hidePasswordCreate;
      ImageButton hidePasswordCreate = ViewBindings.findChildViewById(rootView, id);
      if (hidePasswordCreate == null) {
        break missingId;
      }

      id = R.id.hidePasswordRepeat;
      ImageButton hidePasswordRepeat = ViewBindings.findChildViewById(rootView, id);
      if (hidePasswordRepeat == null) {
        break missingId;
      }

      id = R.id.newPasswordCreate;
      EditText newPasswordCreate = ViewBindings.findChildViewById(rootView, id);
      if (newPasswordCreate == null) {
        break missingId;
      }

      id = R.id.newPasswordRepeat;
      EditText newPasswordRepeat = ViewBindings.findChildViewById(rootView, id);
      if (newPasswordRepeat == null) {
        break missingId;
      }

      id = R.id.resetPassword;
      Button resetPassword = ViewBindings.findChildViewById(rootView, id);
      if (resetPassword == null) {
        break missingId;
      }

      return new FragmentCreatePasswordBinding((LinearLayout) rootView, hidePasswordCreate,
          hidePasswordRepeat, newPasswordCreate, newPasswordRepeat, resetPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
