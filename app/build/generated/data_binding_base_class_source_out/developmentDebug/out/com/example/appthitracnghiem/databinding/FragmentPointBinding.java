// Generated by view binder compiler. Do not edit!
package com.example.appthitracnghiem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appthitracnghiem.R;
import com.jjoe64.graphview.GraphView;
import com.mikhaellopez.circularprogressbar.CircularProgressBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPointBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ImageView backPoint;

  @NonNull
  public final TextView completePercent;

  @NonNull
  public final CardView doAgainTest;

  @NonNull
  public final CardView finishAndSaved;

  @NonNull
  public final GraphView graphView;

  @NonNull
  public final TextView notifiPoint;

  @NonNull
  public final TextView numberCorrect;

  @NonNull
  public final CircularProgressBar progressPoint;

  @NonNull
  public final CardView seeAnswer;

  @NonNull
  public final TextView skipNumber;

  @NonNull
  public final TextView txtPoint;

  @NonNull
  public final TextView wrongNumber;

  private FragmentPointBinding(@NonNull NestedScrollView rootView, @NonNull ImageView backPoint,
      @NonNull TextView completePercent, @NonNull CardView doAgainTest,
      @NonNull CardView finishAndSaved, @NonNull GraphView graphView, @NonNull TextView notifiPoint,
      @NonNull TextView numberCorrect, @NonNull CircularProgressBar progressPoint,
      @NonNull CardView seeAnswer, @NonNull TextView skipNumber, @NonNull TextView txtPoint,
      @NonNull TextView wrongNumber) {
    this.rootView = rootView;
    this.backPoint = backPoint;
    this.completePercent = completePercent;
    this.doAgainTest = doAgainTest;
    this.finishAndSaved = finishAndSaved;
    this.graphView = graphView;
    this.notifiPoint = notifiPoint;
    this.numberCorrect = numberCorrect;
    this.progressPoint = progressPoint;
    this.seeAnswer = seeAnswer;
    this.skipNumber = skipNumber;
    this.txtPoint = txtPoint;
    this.wrongNumber = wrongNumber;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPointBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPointBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_point, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPointBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backPoint;
      ImageView backPoint = ViewBindings.findChildViewById(rootView, id);
      if (backPoint == null) {
        break missingId;
      }

      id = R.id.completePercent;
      TextView completePercent = ViewBindings.findChildViewById(rootView, id);
      if (completePercent == null) {
        break missingId;
      }

      id = R.id.doAgainTest;
      CardView doAgainTest = ViewBindings.findChildViewById(rootView, id);
      if (doAgainTest == null) {
        break missingId;
      }

      id = R.id.finishAndSaved;
      CardView finishAndSaved = ViewBindings.findChildViewById(rootView, id);
      if (finishAndSaved == null) {
        break missingId;
      }

      id = R.id.graphView;
      GraphView graphView = ViewBindings.findChildViewById(rootView, id);
      if (graphView == null) {
        break missingId;
      }

      id = R.id.notifiPoint;
      TextView notifiPoint = ViewBindings.findChildViewById(rootView, id);
      if (notifiPoint == null) {
        break missingId;
      }

      id = R.id.numberCorrect;
      TextView numberCorrect = ViewBindings.findChildViewById(rootView, id);
      if (numberCorrect == null) {
        break missingId;
      }

      id = R.id.progressPoint;
      CircularProgressBar progressPoint = ViewBindings.findChildViewById(rootView, id);
      if (progressPoint == null) {
        break missingId;
      }

      id = R.id.seeAnswer;
      CardView seeAnswer = ViewBindings.findChildViewById(rootView, id);
      if (seeAnswer == null) {
        break missingId;
      }

      id = R.id.skipNumber;
      TextView skipNumber = ViewBindings.findChildViewById(rootView, id);
      if (skipNumber == null) {
        break missingId;
      }

      id = R.id.txtPoint;
      TextView txtPoint = ViewBindings.findChildViewById(rootView, id);
      if (txtPoint == null) {
        break missingId;
      }

      id = R.id.wrongNumber;
      TextView wrongNumber = ViewBindings.findChildViewById(rootView, id);
      if (wrongNumber == null) {
        break missingId;
      }

      return new FragmentPointBinding((NestedScrollView) rootView, backPoint, completePercent,
          doAgainTest, finishAndSaved, graphView, notifiPoint, numberCorrect, progressPoint,
          seeAnswer, skipNumber, txtPoint, wrongNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
