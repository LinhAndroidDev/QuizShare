// Generated by view binder compiler. Do not edit!
package com.example.appthitracnghiem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appthitracnghiem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentReviewCreateExamBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView addCoverImageReview;

  @NonNull
  public final TextView answerReview1;

  @NonNull
  public final TextView answerReview2;

  @NonNull
  public final TextView answerReview3;

  @NonNull
  public final TextView answerReview4;

  @NonNull
  public final CardView backQuestionReview;

  @NonNull
  public final ImageView backReview;

  @NonNull
  public final LinearLayout createResults;

  @NonNull
  public final ImageView doneExamReview;

  @NonNull
  public final CardView editReview;

  @NonNull
  public final ImageView imageCoverReview;

  @NonNull
  public final LinearLayout layoutOnClickComplete;

  @NonNull
  public final CardView nextQuestionReview;

  @NonNull
  public final RecyclerView recycleListNumberReview;

  @NonNull
  public final TextView txtQuestionReview;

  @NonNull
  public final TextView txtSeeAgain;

  @NonNull
  public final TextView txtTimeReview;

  private FragmentReviewCreateExamBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView addCoverImageReview, @NonNull TextView answerReview1,
      @NonNull TextView answerReview2, @NonNull TextView answerReview3,
      @NonNull TextView answerReview4, @NonNull CardView backQuestionReview,
      @NonNull ImageView backReview, @NonNull LinearLayout createResults,
      @NonNull ImageView doneExamReview, @NonNull CardView editReview,
      @NonNull ImageView imageCoverReview, @NonNull LinearLayout layoutOnClickComplete,
      @NonNull CardView nextQuestionReview, @NonNull RecyclerView recycleListNumberReview,
      @NonNull TextView txtQuestionReview, @NonNull TextView txtSeeAgain,
      @NonNull TextView txtTimeReview) {
    this.rootView = rootView;
    this.addCoverImageReview = addCoverImageReview;
    this.answerReview1 = answerReview1;
    this.answerReview2 = answerReview2;
    this.answerReview3 = answerReview3;
    this.answerReview4 = answerReview4;
    this.backQuestionReview = backQuestionReview;
    this.backReview = backReview;
    this.createResults = createResults;
    this.doneExamReview = doneExamReview;
    this.editReview = editReview;
    this.imageCoverReview = imageCoverReview;
    this.layoutOnClickComplete = layoutOnClickComplete;
    this.nextQuestionReview = nextQuestionReview;
    this.recycleListNumberReview = recycleListNumberReview;
    this.txtQuestionReview = txtQuestionReview;
    this.txtSeeAgain = txtSeeAgain;
    this.txtTimeReview = txtTimeReview;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentReviewCreateExamBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentReviewCreateExamBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_review_create_exam, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentReviewCreateExamBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addCoverImageReview;
      ImageView addCoverImageReview = ViewBindings.findChildViewById(rootView, id);
      if (addCoverImageReview == null) {
        break missingId;
      }

      id = R.id.answerReview1;
      TextView answerReview1 = ViewBindings.findChildViewById(rootView, id);
      if (answerReview1 == null) {
        break missingId;
      }

      id = R.id.answerReview2;
      TextView answerReview2 = ViewBindings.findChildViewById(rootView, id);
      if (answerReview2 == null) {
        break missingId;
      }

      id = R.id.answerReview3;
      TextView answerReview3 = ViewBindings.findChildViewById(rootView, id);
      if (answerReview3 == null) {
        break missingId;
      }

      id = R.id.answerReview4;
      TextView answerReview4 = ViewBindings.findChildViewById(rootView, id);
      if (answerReview4 == null) {
        break missingId;
      }

      id = R.id.backQuestionReview;
      CardView backQuestionReview = ViewBindings.findChildViewById(rootView, id);
      if (backQuestionReview == null) {
        break missingId;
      }

      id = R.id.backReview;
      ImageView backReview = ViewBindings.findChildViewById(rootView, id);
      if (backReview == null) {
        break missingId;
      }

      id = R.id.createResults;
      LinearLayout createResults = ViewBindings.findChildViewById(rootView, id);
      if (createResults == null) {
        break missingId;
      }

      id = R.id.doneExamReview;
      ImageView doneExamReview = ViewBindings.findChildViewById(rootView, id);
      if (doneExamReview == null) {
        break missingId;
      }

      id = R.id.editReview;
      CardView editReview = ViewBindings.findChildViewById(rootView, id);
      if (editReview == null) {
        break missingId;
      }

      id = R.id.imageCoverReview;
      ImageView imageCoverReview = ViewBindings.findChildViewById(rootView, id);
      if (imageCoverReview == null) {
        break missingId;
      }

      id = R.id.layoutOnClickComplete;
      LinearLayout layoutOnClickComplete = ViewBindings.findChildViewById(rootView, id);
      if (layoutOnClickComplete == null) {
        break missingId;
      }

      id = R.id.nextQuestionReview;
      CardView nextQuestionReview = ViewBindings.findChildViewById(rootView, id);
      if (nextQuestionReview == null) {
        break missingId;
      }

      id = R.id.recycleListNumberReview;
      RecyclerView recycleListNumberReview = ViewBindings.findChildViewById(rootView, id);
      if (recycleListNumberReview == null) {
        break missingId;
      }

      id = R.id.txtQuestionReview;
      TextView txtQuestionReview = ViewBindings.findChildViewById(rootView, id);
      if (txtQuestionReview == null) {
        break missingId;
      }

      id = R.id.txtSeeAgain;
      TextView txtSeeAgain = ViewBindings.findChildViewById(rootView, id);
      if (txtSeeAgain == null) {
        break missingId;
      }

      id = R.id.txtTimeReview;
      TextView txtTimeReview = ViewBindings.findChildViewById(rootView, id);
      if (txtTimeReview == null) {
        break missingId;
      }

      return new FragmentReviewCreateExamBinding((RelativeLayout) rootView, addCoverImageReview,
          answerReview1, answerReview2, answerReview3, answerReview4, backQuestionReview,
          backReview, createResults, doneExamReview, editReview, imageCoverReview,
          layoutOnClickComplete, nextQuestionReview, recycleListNumberReview, txtQuestionReview,
          txtSeeAgain, txtTimeReview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
